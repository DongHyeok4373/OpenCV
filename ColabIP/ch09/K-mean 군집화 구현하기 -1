{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1236,"status":"ok","timestamp":1732500680024,"user":{"displayName":"최동혁","userId":"06474868044819844255"},"user_tz":-540},"id":"L5Vd07VSubpn","outputId":"ac989db4-6249-4815-f130-74d5746d3469"},"outputs":[{"output_type":"stream","name":"stdout","text":["/bin/bash: line 1: pythion: command not found\n"]}],"source":["!pythion --version"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"-ebGtn25yHaM","executionInfo":{"status":"ok","timestamp":1732500752069,"user_tz":-540,"elapsed":339,"user":{"displayName":"최동혁","userId":"06474868044819844255"}}},"outputs":[],"source":["from google.colab.patches import cv2_imshow\n","import numpy as np\n","import cv2\n","import matplotlib.pyplot as plt\n","from google.colab import drive"]},{"cell_type":"code","source":["X = np.random.randint(25,50,(25,2))\n","Y = np.random.randint(60,85,(25,2))"],"metadata":{"id":"DtzsBQWOF5Pg","executionInfo":{"status":"ok","timestamp":1732500840778,"user_tz":-540,"elapsed":344,"user":{"displayName":"최동혁","userId":"06474868044819844255"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["Z = np.vstack((X,Y))"],"metadata":{"id":"zQXQoBp3GQoI","executionInfo":{"status":"ok","timestamp":1732500876299,"user_tz":-540,"elapsed":348,"user":{"displayName":"최동혁","userId":"06474868044819844255"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["Z = np.float32(Z)"],"metadata":{"id":"a5w2L3ImGWzA","executionInfo":{"status":"ok","timestamp":1732500890601,"user_tz":-540,"elapsed":349,"user":{"displayName":"최동혁","userId":"06474868044819844255"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 10, 1.0)\n","ret,label,center=cv2.kmeans(Z,2,None,criteria,10,cv2.KMEANS_RANDOM_CENTERS)"],"metadata":{"id":"45NSbVVQGaWo","executionInfo":{"status":"ok","timestamp":1732501037872,"user_tz":-540,"elapsed":359,"user":{"displayName":"최동혁","userId":"06474868044819844255"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["A = Z[label.ravel()==0]\n","B = Z[label.ravel()==1]\n","plt.scatter(A[:,0],A[:,1], c='b')\n","plt.scatter(B[:,0],B[:,1],c = 'r')\n","plt.scatter(center[:,0],center[:,1],s = 200,c = 'y', marker = '*')\n","plt.xlabel('Height'),plt.ylabel('Weight')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"YLjt-cnpG-Qw","executionInfo":{"status":"ok","timestamp":1732501332469,"user_tz":-540,"elapsed":812,"user":{"displayName":"최동혁","userId":"06474868044819844255"}},"outputId":"5ac63006-9125-430c-e76b-b04a338d1710"},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IvXVT2Ouu6Ix","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732082934681,"user_tz":-540,"elapsed":57159,"user":{"displayName":"최동혁","userId":"06474868044819844255"}},"outputId":"e5c113ab-cfa3-47f4-d311-66a19896ea27"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TrV1opmcyecs"},"outputs":[],"source":["img = cv2.imread('/content/gdrive/My Drive/ColabIP/Images/areo2.bmp')\n"]},{"cell_type":"markdown","source":[],"metadata":{"id":"6ihmuqL7DerJ"}},{"cell_type":"code","source":["kernel1= np.ones(5,5, np.uint8)\n","closing = cv2.morphologyEx(img, cv2.MORPH_CLOSE, kernel1)\n","print(\"Original image\")\n","cv2_imshow(img)\n","print(\"Closing gray image\")\n","cv2_imshow(closing)"],"metadata":{"id":"7YmRyAjEKQp0","executionInfo":{"status":"error","timestamp":1732083098158,"user_tz":-540,"elapsed":326,"user":{"displayName":"최동혁","userId":"06474868044819844255"}},"colab":{"base_uri":"https://localhost:8080/","height":349},"outputId":"c4bb2e84-a82f-4fcd-c83b-4975b522dd75"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"Cannot interpret '5' as a data type","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-c17316a61cfe>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mkernel1\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mones\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muint8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mclosing\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmorphologyEx\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMORPH_CLOSE\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Original image\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mcv2_imshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Closing gray image\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/numpy/core/numeric.py\u001b[0m in \u001b[0;36mones\u001b[0;34m(shape, dtype, order, like)\u001b[0m\n\u001b[1;32m    189\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0m_ones_with_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlike\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    190\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 191\u001b[0;31m     \u001b[0ma\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mempty\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    192\u001b[0m     \u001b[0mmultiarray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopyto\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcasting\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'unsafe'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    193\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: Cannot interpret '5' as a data type"]}]},{"cell_type":"code","source":["img= cv2.imread('/content/gdrive/My Drive/ColabIP/Images/rice.bmp',0)\n","gray = img\n","height, width = gray.shape"],"metadata":{"id":"FsSI8JpkQM8P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["out = np.zeros((height+2, width+2), dtype=np.uint8)\n","out[1:height+1, 1:width+1] = gray.copy()\n","erosion = np.zeros_like(gray)\n","dilation = np.zeros_like(gray)"],"metadata":{"id":"Al8fbDZARQG2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(height):\n","  for j in range(width):\n","    temp = out[i:i+3, j:j+3]\n","    erosion[i, j] = np.min(temp)"],"metadata":{"id":"_49vyyyqRsZf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"Gray input image\")\n","cv2_imshow(gray)\n","print(\"Erosion result\")\n","cv2_imshow(erosion)"],"metadata":{"id":"hKIu9ZeFR15m"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMkMV2iPqp18a4+J0WUrzVr"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}